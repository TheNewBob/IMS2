#pragma once

/**
 * \brief This event serves to notify the vessel that something happened that requires it to shift its center of gravity.
 *
 * Not to be confused with the CoGHasChanged event, which serves to tell everyone else that the CoG has been
 * shifted and contains the data where to. This event contains no data and is pretty much useless for modules or module functions.
 * It should therefore always be consumed by the vessel. Also, this event should only be generated by the vessel. Modules 
 * and module functions should send a MassHasChangedEvent and let the vessel take it from there. Otherwise, there will be multiple
 * ShiftCGEvents coming in, leading to redundant code execution.
 *
 * this event has a default delay of 10 seconds. This is because in many circumstances, like firing a thruster, the CoG technically
 * changes every single frame, but shifting it around all the time is not useful, neither for cpu usage nor for stability.
 * Some actions that can assumed to be momentary, like assembling or disassembling a vessel, can define a lower timer. Recommended 
 * in such cases is a delay of 1 miliseconds, which will fire the event in the next frame under any reasonable circumstances. a timer
 * of 0 will lead to immediate propagation at time of creation and is not recommended.
 * \see CoGHasChangedEvent
 * \see MassHasCHangedEvent
 * \see EventHandler.h
 */
class ShiftCGEvent :
	public Event_Timed
{
public:
	/**
	 * \param miliseconds Delay between event creation and event trigger in miliseconds
	 */
	ShiftCGEvent(unsigned int miliseconds = 10000) : Event_Timed(SHIFTCGEVENT, miliseconds){};
	~ShiftCGEvent(){};

};

