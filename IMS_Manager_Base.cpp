#include "common.h"
#include "events.h"
#include "IMS.h"
#include "IMS_Manager_Base.h"


IMS_Manager_Base::IMS_Manager_Base(IMS2 *vessel)
	: vessel(vessel)
{
	//initialise event handler
	eventhandlertype = MANAGER_HANDLER;
	//event generator that sends events to vessel
	createEventGenerator(VESSEL_TO_MODULE_PIPE);
	createEventSink(VESSEL_TO_MODULE_PIPE);
	createEventSink(MODULE_TO_VESSEL_PIPE);

	//connect the eventgenerator to the vessels outgoing sink
	vessel->ConnectMySinkToYourNode(getEventGenerator(VESSEL_TO_MODULE_PIPE), VESSEL_TO_MODULE_PIPE);
	//connect a sink to the vessel's outgoing sink, so we get events generated by the vessel
	vessel->ConnectToMyEventSink(getEventSink(VESSEL_TO_MODULE_PIPE), VESSEL_TO_MODULE_PIPE);
	//connect the eventsink to the vessels incoming sink
	vessel->ConnectToMyEventSink(getEventSink(MODULE_TO_VESSEL_PIPE), MODULE_TO_VESSEL_PIPE);
}


IMS_Manager_Base::~IMS_Manager_Base()
{
}


void IMS_Manager_Base::PreStep(double simdt)
{
	sendEvents();
}

void IMS_Manager_Base::PostStep(double simdt)
{
	processWaitingQueue();
}